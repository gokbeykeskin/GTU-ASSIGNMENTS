make --dry-run --always-make --keep-going --print-directory
make: Entering directory '/home/gokbey/Desktop/os1_hw1'
mkdir -p obj
as --32 -o obj/loader.o src/loader.s
mkdir -p obj
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/gdt.o src/gdt.cpp
mkdir -p obj/drivers
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/drivers/driver.o src/drivers/driver.cpp
mkdir -p obj/hardwarecommunication
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/hardwarecommunication/port.o src/hardwarecommunication/port.cpp
mkdir -p obj/hardwarecommunication
as --32 -o obj/hardwarecommunication/interruptstubs.o src/hardwarecommunication/interruptstubs.s
mkdir -p obj/hardwarecommunication
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/hardwarecommunication/interrupts.o src/hardwarecommunication/interrupts.cpp
mkdir -p obj
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/multitasking.o src/multitasking.cpp
mkdir -p obj/hardwarecommunication
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/hardwarecommunication/pci.o src/hardwarecommunication/pci.cpp
mkdir -p obj/drivers
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/drivers/keyboard.o src/drivers/keyboard.cpp
mkdir -p obj/drivers
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/drivers/mouse.o src/drivers/mouse.cpp
mkdir -p obj/drivers
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/drivers/vga.o src/drivers/vga.cpp
mkdir -p obj/gui
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/gui/widget.o src/gui/widget.cpp
mkdir -p obj/gui
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/gui/window.o src/gui/window.cpp
mkdir -p obj/gui
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/gui/desktop.o src/gui/desktop.cpp
mkdir -p obj
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/queue.o src/queue.cpp
mkdir -p obj
gcc -m32 -Iinclude -fno-use-cxa-atexit -nostdlib -fno-builtin -fno-rtti -fno-exceptions -fno-leading-underscore -Wno-write-strings -c -o obj/kernel.o src/kernel.cpp
ld -melf_i386 -T linker.ld -o mykernel.bin obj/loader.o obj/gdt.o obj/drivers/driver.o obj/hardwarecommunication/port.o obj/hardwarecommunication/interruptstubs.o obj/hardwarecommunication/interrupts.o obj/multitasking.o obj/hardwarecommunication/pci.o obj/drivers/keyboard.o obj/drivers/mouse.o obj/drivers/vga.o obj/gui/widget.o obj/gui/window.o obj/gui/desktop.o obj/queue.o obj/kernel.o 
mkdir iso
mkdir iso/boot
mkdir iso/boot/grub
cp mykernel.bin iso/boot/mykernel.bin
echo 'set timeout=0'                      > iso/boot/grub/grub.cfg
echo 'set default=0'                     >> iso/boot/grub/grub.cfg
echo ''                                  >> iso/boot/grub/grub.cfg
echo 'menuentry "GokOS" {' >> iso/boot/grub/grub.cfg
echo '  multiboot /boot/mykernel.bin'    >> iso/boot/grub/grub.cfg
echo '  boot'                            >> iso/boot/grub/grub.cfg
echo '}'                                 >> iso/boot/grub/grub.cfg
grub-mkrescue --output=mykernel.iso iso
rm -rf iso
(killall VirtualBoxVM && sleep 1) || true
VirtualBoxVM --startvm 'GokOS' &
make: Leaving directory '/home/gokbey/Desktop/os1_hw1'
 
